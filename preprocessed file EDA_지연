{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"preprocessed file EDA","private_outputs":true,"provenance":[],"collapsed_sections":[],"mount_file_id":"16Z-7qd4E6MqYt3m0c_nPe3ZbNAYAXp6-","authorship_tag":"ABX9TyMek6ugVdoTdCLXux94j7GF"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","metadata":{"id":"kPskWLcN2XIK"},"source":["# Import Libraries\n","import os\n","import pandas as pd\n","import numpy as np\n","from scipy.stats import norm\n","from sklearn.preprocessing import StandardScaler\n","from scipy import stats\n","import warnings\n","warnings.filterwarnings('ignore')\n","%matplotlib inline\n","\n","# Date\n","from calendar import monthrange\n","from datetime import date, datetime\n","\n","# Visuzliation Setting\n","import matplotlib.pyplot as plt\n","import matplotlib.font_manager as fm\n","from matplotlib import rc\n","from matplotlib import colors\n","import seaborn as sns"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4Ex72AO82j43"},"source":["root = os.path.join('/content/drive/MyDrive', 'DATA')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3-cRrzDFHzgA"},"source":["# !sudo apt-get install -y fonts-nanum\n","# !sudo fc-cache -fv\n","# !rm ~/.cache/matplotlib -rf"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5TXLFNGsH31Y"},"source":["import matplotlib.pyplot as plt\n","\n","plt.rc('font', family='NanumBarunGothic') "],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"ofr58ujC2niy"},"source":["df_raw = pd.read_csv(os.path.join(root, 'preprocessed_train.csv'))\n","df_train = df_raw.copy()\n","df_raw = pd.read_csv(os.path.join(root, 'preprocessed_weather.csv'))\n","df_weather = df_raw.copy()\n","df_raw = pd.read_csv(os.path.join(root, 'preprocessed_weather_korea.csv'))\n","df_weather_korea = df_raw.copy()\n","df_raw = pd.read_csv(os.path.join(root, 'preprocessed_cpi.csv'))\n","df_cpi = df_raw.copy()\n","df_raw = pd.read_csv(os.path.join(root, 'preprocessed_exchange.csv'))\n","df_exchange = df_raw.copy()\n","df_raw = pd.read_csv(os.path.join(root, 'preprocessed_oil.csv'))\n","df_oil = df_raw.copy()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"sIJ99bNuCfl-"},"source":["pd.set_option('display.max_columns', 650)\n","pd.set_option('display.max_rows',10)\n","#df_train.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"drfZ02Fx5UKP"},"source":["df_train.head()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"b6q1U8r_e3-U"},"source":["df_t_1 = df_train[df_train['year']==2017].copy()\n","df_t_2 = df_t_1[df_t_1['week']==2].copy()\n","# df_train의 2017년 2주째가 없음"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"vTqynlTUDbeA"},"source":["# 1. 국가별 날씨에 대한 전체 가격변화\n","\n","- 국가는 노르웨이, 태국, 베트남, 중국, 칠레로 진행 : 페루는 데이터가 너무없어서 제외하고 한다.\n","\n","1. 전체 price와 주요국가 날씨데이터\n","2. 전체 price와 한국 날씨데이터\n","    - 상관관계 없어보임\n","3. 연어 price와 연어 주요국가 날씨데이터\n","    - 노르웨이\n","    - P_NAME_연어 와의 관계보다 CATEGORY_1_연어 와의 관계가 더 높다\n","4. 오징어 price와 오징어 주요국가 날씨데이터\n","    - 베트남, 중국, 칠레 (태국)\n","5. 새우 price와 새우 주요국가 날씨데이터\n","\n","\n","# 2. train 데이터 안에서 온도, oil, cpi, 날씨, kr_날씨 분석\n","        \n","- 온도, oil, cpi 데이터 말고 눈에 띄는것 없음\n","- cpi는 미래 데이터가 없을것같은데?\n","\n","# 3. train 데이터 안에서 대분류, 소분류 분석\n","\n","- 대분류 분석에서 알,곤이류와 높은 상관관계 0.39\n","- 소분류 분석에서 해삼 0.26, 참다랑어 0.1, 성게알 0.61\n","- 가격이 높은것이 높은 상관관계를 갖는다\n","\n","# 4. train 데이터 안에서 수입용도별 분석\n","\n","- 건조 0.12, 냉장 0.19, 횟감 0.27\n","- 3번의 결과로 보아 건조,냉장,횟감 의 가격이 높은것을 추측할 수 있다.\n","\n","# 5. 연어, 오징어, 새우 별 IMPORT_TYPE\n","# 6. 연어, 오징어, 새우 별 온도,oil,cpi,날씨,kr_날씨 분석\n","\n","- oil : 오징어가 oil과의 상관관계가 높게 나타난다.\n","- cpi : 연어와 새우는 cpi와의 상관관계가 오징어보다 낮게 나타난다. (오징어가 cpi지수에 많은영향을끼침?)\n","- kr_temp : 한국날씨와는 상관관계가 별로 없다. 연어가 다른것들에 비해 좀 높음\n","- exchange : 오징어가 다른것들에 비해 exchange와의 상관관계가 높다.\n","\n"]},{"cell_type":"code","metadata":{"id":"NS-t5bK-XDvI"},"source":["df_weather['CTRY_1'].value_counts()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"yrQmMkX_q9NJ"},"source":["### 1-1. 주요국가 날씨와 전체 price의 상관관계"]},{"cell_type":"code","metadata":{"id":"BjxCeMd37A1_"},"source":["# 주별 가격 평균 추출\n","df_test = pd.DataFrame([])\n","\n","df_1 = df_train[['year','week']]\n","df_test[['year','week']]=df_1\n","df_test['P_PRICE']=df_train.groupby(['year','week'])['P_PRICE'].transform('mean')\n","df_test.drop_duplicates(['year','week'],inplace=True)\n","df_test.reset_index(drop=True,inplace=True)\n","df_test"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FcV9mOa82ub3"},"source":["df_weather['CTRY_1'].unique()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"-mXh4G1-_REa"},"source":["df_1 = df_weather[df_weather['CTRY_1'] == '노르웨이'].copy()\n","df_1.rename(columns = {'rain' :'nor_rain', 'wind' : 'nor_wind', 'temperature' : 'nor_temp'}, inplace = True)\n","df_1.groupby(['year','week'])[['nor_rain','nor_wind','nor_temp']]\n","df_1.sort_values(by=['year','week'],inplace = True)\n","df_1.reset_index(drop=True,inplace=True)\n","# df_c_test = df_1[['nor_rain','nor_wind','nor_temp']]\n","\n","df_2 = df_weather[df_weather['CTRY_1'] == '태국'].copy()\n","df_2.rename(columns = {'rain' :'tai_rain', 'wind' : 'tai_wind', 'temperature' : 'tai_temp'}, inplace = True)\n","df_2.sort_values(by=['year','week'],inplace = True)\n","df_2.reset_index(drop=True,inplace=True)\n","# df_c_test[['tai_rain','tai_wind','tai_temp']] = df_1[['tai_rain','tai_wind','tai_temp']]\n","\n","df_3 = df_weather[df_weather['CTRY_1'] == '베트남'].copy()\n","df_3.rename(columns = {'rain' :'vie_rain', 'wind' : 'vie_wind', 'temperature' : 'vie_temp'}, inplace = True)\n","df_3.sort_values(by=['year','week'],inplace = True)\n","df_3.reset_index(drop=True,inplace=True)\n","\n","df_4 = df_weather[df_weather['CTRY_1'] == '중국'].copy()\n","df_4.rename(columns = {'rain' :'chn_rain', 'wind' : 'chn_wind', 'temperature' : 'chn_temp'}, inplace = True)\n","df_4.sort_values(by=['year','week'],inplace = True)\n","df_4.reset_index(drop=True,inplace=True)\n","\n","df_5 = df_weather[df_weather['CTRY_1'] == '칠레'].copy()\n","df_5.rename(columns = {'rain' :'chl_rain', 'wind' : 'chl_wind', 'temperature' : 'chl_temp'}, inplace = True)\n","df_5.sort_values(by=['year','week'],inplace = True)\n","df_5.reset_index(drop=True,inplace=True)\n","\n","# df_c_test = pd.concat([df_1[['nor_rain','nor_wind','nor_temp']],\n","#                        df_2[['tai_rain','tai_wind','tai_temp']],\n","#                        df_3[['vie_rain','vie_wind','vie_temp']],\n","#                        df_4[['chn_rain','chn_wind','chn_temp']],\n","#                        df_5[['chl_rain','chl_wind','chl_temp']]],axis=1)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"MKOhL2N2aqs6"},"source":["from functools import reduce\n","\n","# 국가별 날씨를 평균내어 중복되는 일자수 없앰\n","\n","df_1_2 = df_1.groupby(['year','week'])[['nor_rain','nor_wind','nor_temp']].mean()\n","df_2_2 = df_2.groupby(['year','week'])[['tai_rain','tai_wind','tai_temp']].mean()\n","df_3_2 = df_3.groupby(['year','week'])[['vie_rain','vie_wind','vie_temp']].mean()\n","df_4_2 = df_4.groupby(['year','week'])[['chn_rain','chn_wind','chn_temp']].mean()\n","df_5_2 = df_5.groupby(['year','week'])[['chl_rain','chl_wind','chl_temp']].mean()\n","dfs = [df_test,df_1_2,df_2_2,df_3_2,df_4_2,df_5_2]\n","\n","df_merge = reduce(lambda left, right: pd.merge(left, right, on=['year','week']), dfs)\n","\n","df_merge\n","# df_test_2 = pd.merge(df_1_2, df_2_2, how='left',on=['year','week'])\n","# df_test_2 = pd.concat([df_1_2[['nor_rain','nor_wind','nor_temp']],\n","#                        df_2_2[['tai_rain','tai_wind','tai_temp']],\n","#                        df_3_2[['vie_rain','vie_wind','vie_temp']],\n","#                        df_4_2[['chn_rain','chn_wind','chn_temp']],\n","#                        df_5_2[['chl_rain','chl_wind','chl_temp']]],axis=1)\n","# df_test_2"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"lXMSRB_LBnI5"},"source":["# 주요국가날씨와 전체 price의 상관관계\n","\n","df_test_corr = df_merge.corr()\n","\n","plt.figure(figsize = (10,10))\n","\n","# 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","mask = np.zeros_like(df_test_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","\n","plt.rc('axes', unicode_minus=False)\n","sns.heatmap(df_test_corr,\n","            cmap = 'coolwarm', \n","            annot = True,   # 실제 값을 표시한다\n","            mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","            #linewidths=.5,  # 경계면 실선으로 구분하기\n","            cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","            vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","           )\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"-FpuVqQXsRd6"},"source":["### 1-2. 전체 일자별 평균 price와 한국 날씨와의 상관관계\n","\n","- 상관관계가 별로 없어보인다 "]},{"cell_type":"code","metadata":{"id":"3_4JW3Sd37zQ"},"source":["df_weather_korea\n","# df_w_k = df_weather_korea.groupby(['year','week'])[['wind_kr','temperature_kr','water_temp_kr']].mean()\n","# df_w_k\n","# 잘정제되어있음"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"0x_O7nX_4fNF"},"source":["dfs = [df_test,df_weather_korea]\n","df_merge = reduce(lambda left, right: pd.merge(left, right, on=['year','week']), dfs)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"VgwwN21HsEq1"},"source":["# 한국 날씨와 전체 price의 상관관계\n","\n","df_test_corr = df_merge.corr()\n","\n","plt.figure(figsize = (10,10))\n","\n","# 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","mask = np.zeros_like(df_test_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","\n","plt.rc('axes', unicode_minus=False)\n","sns.heatmap(df_test_corr,\n","            cmap = 'coolwarm', \n","            annot = True,   # 실제 값을 표시한다\n","            mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","            #linewidths=.5,  # 경계면 실선으로 구분하기\n","            cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","            vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","           )\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"eNTOSwkCwKZz"},"source":["### 1-3. 주요국의 날씨와 주별 연어 가격의 상관관계\n","\n","- 노르웨이 온도와 상관관계가 0.35\n","- 잘못해서 'CATEGORY_2_연어' 와 상관관계를 비교했을때는 0.35가 나왔는데 'P_NAME_연어'로  상관관계 비교하니까 0.21로 줄어들었다."]},{"cell_type":"code","metadata":{"id":"GposrYQAsJvt"},"source":["# 주별 연어 가격 평균 추출\n","df_test = pd.DataFrame([])\n","\n","df_salmon = df_train[df_train['P_NAME_연어'] == 1]\n","#df_salmon[['year','week','is_processed','rain','wind','temperature','oil','wind_kr','temperature_kr','water_temp_kr','cpi_fish','exchange']]\n","\n","df_1 = df_salmon[['year','week']]\n","df_test[['year','week']]=df_1\n","df_test['P_PRICE']=df_salmon.groupby(['year','week'])['P_PRICE'].transform('mean')\n","df_test.drop_duplicates(['year','week'],inplace=True)\n","df_test.reset_index(drop=True,inplace=True)\n","df_test\n","\n","dfs = [df_test,df_1_2]\n","df_merge = reduce(lambda left, right: pd.merge(left, right, on=['year','week']), dfs)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"DKe1RiJzsxIb"},"source":["# 연어주요국 노르웨이의 기후와 연어 가격 평균 상관관계\n","\n","df_test_corr = df_merge.corr()\n","\n","plt.figure(figsize = (10,10))\n","\n","# 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","mask = np.zeros_like(df_test_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","\n","plt.rc('axes', unicode_minus=False)\n","sns.heatmap(df_test_corr,\n","            cmap = 'coolwarm', \n","            annot = True,   # 실제 값을 표시한다\n","            mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","            #linewidths=.5,  # 경계면 실선으로 구분하기\n","            cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","            vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","           )\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"rg1VLe6bxoQ6"},"source":["### 1-4. 주요국의 날씨와 오징어 가격과의 상관관계\n","\n","- 베트남, 중국, 칠레 (태국) 을 대상으로 상관관계를진행하였으나 크게 눈에 띄는것 없음"]},{"cell_type":"code","metadata":{"id":"nSXXlC4PtBhF"},"source":["# 주별 오징어 가격 평균 추출\n","df_test = pd.DataFrame([])\n","\n","df_squid = df_train[df_train['P_NAME_오징어'] == 1]\n","\n","df_1 = df_squid[['year','week']]\n","df_test[['year','week']]=df_1\n","df_test['P_PRICE']=df_squid.groupby(['year','week'])['P_PRICE'].transform('mean')\n","df_test.drop_duplicates(['year','week'],inplace=True)\n","df_test.reset_index(drop=True,inplace=True)\n","df_test\n","\n","dfs = [df_test,df_2_2,df_3_2,df_4_2,df_5_2]\n","df_merge = reduce(lambda left, right: pd.merge(left, right, on=['year','week']), dfs)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"IV9gRJ8QxTPT"},"source":["# 오징어주요국 베트남, 중국 칠레 (태국은그냥넣어봄)의 기후와 오징어 가격 평균의 상관관계\n","\n","df_test_corr = df_merge.corr()\n","\n","plt.figure(figsize = (10,10))\n","\n","# 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","mask = np.zeros_like(df_test_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","\n","plt.rc('axes', unicode_minus=False)\n","sns.heatmap(df_test_corr,\n","            cmap = 'coolwarm', \n","            annot = True,   # 실제 값을 표시한다\n","            mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","            #linewidths=.5,  # 경계면 실선으로 구분하기\n","            cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","            vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","           )\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dJQJ1VgqzYHY"},"source":["### 1-5. 주요 수출국의 날씨와 새우가격 상관관계"]},{"cell_type":"code","metadata":{"id":"kh0OhTXsxmPc"},"source":["# 주별 흰다리새우 가격 평균 추출\n","df_test = pd.DataFrame([])\n","\n","df_shrimp = df_train[df_train['P_NAME_흰다리새우'] == 1]\n","\n","df_1 = df_shrimp[['year','week']]\n","df_test[['year','week']]=df_1\n","df_test['P_PRICE']=df_shrimp.groupby(['year','week'])['P_PRICE'].transform('mean')\n","df_test.drop_duplicates(['year','week'],inplace=True)\n","df_test.reset_index(drop=True,inplace=True)\n","df_test\n","\n","dfs = [df_test,df_2_2,df_3_2]\n","df_merge = reduce(lambda left, right: pd.merge(left, right, on=['year','week']), dfs)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"12dT8qPKyYtm"},"source":["# 새우주요국 태국 , 베트남의 기후와 새우가격 평균의 상관관계\n","\n","df_test_corr = df_merge.corr()\n","\n","plt.figure(figsize = (10,10))\n","\n","# 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","mask = np.zeros_like(df_test_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","\n","plt.rc('axes', unicode_minus=False)\n","sns.heatmap(df_test_corr,\n","            cmap = 'coolwarm', \n","            annot = True,   # 실제 값을 표시한다\n","            mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","            #linewidths=.5,  # 경계면 실선으로 구분하기\n","            cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","            vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","           )\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"90IQr_oI7KV6"},"source":["df_train"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"zGW7XqhcDeLA"},"source":["### 2. train 데이터 내에서 날씨,유가,환율 등 분석"]},{"cell_type":"code","metadata":{"id":"dP6f_J_f7FtN"},"source":["# 주별 가격 평균 추출\n","df_test = pd.DataFrame([])\n","\n","df_1 = df_train[['year','week']]\n","df_test[['year','week']]=df_1\n","df_test[['P_PRICE','rain','wind','temperature','oil','wind_kr','temperature_kr','water_temp_kr','cpi_total','cpi_fish','exchange']]=df_train.groupby(['year','week'])[['P_PRICE','rain','wind','temperature','oil','wind_kr','temperature_kr','water_temp_kr','cpi_total','cpi_fish','exchange']].transform('mean')\n","df_test.drop_duplicates(['year','week'],inplace=True)\n","df_test.reset_index(drop=True,inplace=True)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"eigCot3V7h0A"},"source":["df_test_corr = df_test.corr()\n","\n","plt.figure(figsize = (10,10))\n","\n","# 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","mask = np.zeros_like(df_test_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","\n","plt.rc('axes', unicode_minus=False)\n","sns.heatmap(df_test_corr,\n","            cmap = 'coolwarm', \n","            annot = True,   # 실제 값을 표시한다\n","            mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","            #linewidths=.5,  # 경계면 실선으로 구분하기\n","            cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","            vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","           )\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"QrHlKG-KDpbX"},"source":["### 3. train 데이터에서 대분류, 소분류 분석\n","- 알, 곤이류에서 0.39의 높은 상관관계"]},{"cell_type":"code","metadata":{"id":"ZxW27VnA5pTl"},"source":["df_train.columns"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"TDIEROpsD3iB"},"source":["# '갑각류', '패류 멍게류', '어류', '연체류 해물모듬', '젓갈류 해조류 해파리', '알 곤이류','기타 수입식품'\n","\n","df_test = pd.DataFrame([])\n","\n","df_test = df_train[['P_PRICE','CATEGORY_1_갑각류', 'CATEGORY_1_패류 멍게류', 'CATEGORY_1_어류', 'CATEGORY_1_연체류 해물모듬', 'CATEGORY_1_젓갈류 해조류 해파리', 'CATEGORY_1_알 곤이류','CATEGORY_1_기타 수입식품']]\n","df_test.reset_index(drop=True,inplace=True)\n","df4_name = df_test\n","\n","df4_name_corr = df4_name.corr()\n","\n","plt.figure(figsize = (10,10))\n","\n","# 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","mask = np.zeros_like(df4_name_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","\n","plt.rc('axes', unicode_minus=False)\n","sns.heatmap(df4_name_corr,\n","            cmap = 'coolwarm', \n","            annot = True,   # 실제 값을 표시한다\n","            mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","            #linewidths=.5,  # 경계면 실선으로 구분하기\n","            cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","            vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","           )\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"s-qLjW4NHWna"},"source":["arr = ['아르헨티나붉은새우', '꽃게', '해삼', '서대', '은밀복', '옥돔', '까치복', '흰다리새우', '바지락',\n","       '가리비', '개조개', '문어', '주꾸미', '멍게', '대서양참다랑어', '파타고니아이빨고기', '낙지',\n","       '눈다랑어', '가오리', '미역', '뱀장어', '참다랑어', '대서양연어', '대구', '명태알', '대게',\n","       '줄민태', '홍서대', '위고둥', '꽁치', '황새치', '틸라피아', '오징어', '기름치', '바다가재',\n","       '까지가자미', '홍어', '먹장어', '명태', '홍다리얼룩새우', '화살오징어', '청상아리', '붕어',\n","       '감성돔', '자주복', '꼬막', '재첩', '피조개', '피뿔고둥', '능성어', '준치', '참돔', '연어',\n","       '왕게', '장문볼락', '각시가자미', '가자미', '털게', '해파리', '새우', '민밀복', '젓새우',\n","       '홍합', '백합,MERCENARIA MERCENARIA', '새꼬리민태알', '붕장어', '갈치', '밴댕이',\n","       '갑오징어', '성게알', '동자개', '코토니', '병어', '이스라엘잉어', '영상가이석태', '스피노잠',\n","       '새꼬막', '농어', '아귀', '긴가이석태', '방어', '고등어', '흑밀복', '홍민어', '북방대합',\n","       '백합', '황돔', '미꾸라지', '가무락조개', '부세', '줄비늘치', '개불', '비단조개', '깜장북방대합',\n","       '참조기', '비너스백합', '민들조개', '주름백합', '아담스백합', '은연어', '민어', '옥두어', '민꽃게',\n","       '골뱅이', '민물새우', '게', '임연수어', '해물혼합', '식용자라', '흑기흉상어', 'PANGASIUS메기',\n","       '보리멸', '마소치가자미', '귀상어', '동죽', '남방참다랑어', '송어', '적새우', '잉어', '쥐치',\n","       '다슬기', '소주목탁가자미', '맛조개', '톳', '양볼락', '조피볼락', '동등이석태', '곱사연어',\n","       '대서양먹장어', '대구알', '붉은이석태', '붉평치', '수조기', '강도다리', '날치알', '왕연어', '전복',\n","       '청어', '바닷가재', '쥐노래미', '학공치', '멸치', '키조개', '새조개', '가이석태속', '붉은대게',\n","       '돌돔', '황다랑어', '검정가자미', '은대구', '쏘가리', '붉은메기', '벵에돔', '북쪽분홍새우',\n","       '돛새치', '갯고둥', '돌가자미', '상어', '먹볼락', '마설가자미', '검복', '참게', '톱날꽃게',\n","       '참복', '동갈돗돔', '밤색무늬조개', '가다랑어', '큰징거미새우', '꼬시래기', '진환도상어', '첨치가자미',\n","       '메기', '실꼬리돔', '블루화이팅', '꼬리검정민태', '청새치', '홍연어,Red salmon', '달고기',\n","       '대서양꼬마민어', '어름돔', '개량조개', '전갱이,POMPANO', '자바리', '벤자리', '자이언트그루퍼',\n","       '갯장어', '논고둥', '돌가사리', '열빙어', '도화새우', '가물치', '검정볼락', '청어알',\n","       '두점박이민꽃게', '개복치', '진홍퉁돔', '양태', '황적퉁돔', '가시투성왕게', '청새리상어',\n","       '태평양먹장어', '쿠자조기', '큰구슬우렁이', '큰실말', '강담돔', '칠성장어', '닭새우', '열빙어알',\n","       '쥐돔', '전갱이', '홍감펭', '곱상어', '청각', '날개다랑어', '연어알', '우뭇가사리', '매듭가자미',\n","       '전어', '새뱅이', '유럽물레고둥', '흑점샛돔알', '흑점줄전갱이', '돔', '장수기름가자미', '가라지',\n","       '코드아이스피쉬', '망둑어', '은민대구알', '기타민어류', '남방대구', '삼치', '던지네스게', '샛돔류알',\n","       '체장메기', '버들붕어', '민물가재', '까칠복', '뿔가자미', '왕게붙이', '잿방어', '대서양조기속',\n","       '넙치', '세네갈가이석태', '샛돔', '은행게', '볼락', '병치매가리', '밀크피시', '붉돔', '기타병어류',\n","       '양초선홍치', '민태', '다시마', '회초리꼬리민태', '버터플라이 킹피쉬', '흰꼴뚜기', '대두이석태',\n","       '얼룩볼락', '큰민어', '바라문디', '바리', '민대구', '적돔', '동갈횟대', '드렁허리', '금색돔',\n","       '소라', '김', '녹새치', '금눈돔', '매미새우', '옥덩굴', '은민대구', '장성베도라치', '바리,교잡종',\n","       '코끼리조개', '구라미', '쌍지붕어', '대서양붉은볼락', '청대구', '프로펠러조개', '정어리', '등목어',\n","       '가시배새우', '물메기', '청회볼락']\n","\n","\n","arr_p = ['P_PRICE']\n","for i in arr : \n","     arr_p.append(\"P_NAME_\" + i)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"UCq404-tK4IA"},"source":["df_test = pd.DataFrame([])\n","\n","\n","df_test = df_train[arr_p]\n","df_test.reset_index(drop=True,inplace=True)\n","df4_name = df_test\n","\n","df4_name_corr = df4_name.corr()\n","\n","# 너무많아서 안보임\n","\n","# plt.figure(figsize = (10,10))\n","\n","# # 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","# mask = np.zeros_like(df4_name_corr, dtype=np.bool)\n","# mask[np.triu_indices_from(mask)] = True\n","\n","# plt.rc('axes', unicode_minus=False)\n","# sns.heatmap(df4_name_corr,\n","#             cmap = 'coolwarm', \n","#             annot = True,   # 실제 값을 표시한다\n","#             mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","#             #linewidths=.5,  # 경계면 실선으로 구분하기\n","#             cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","#             vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","#            )\n","# plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"benaWFBKLq1g"},"source":["df4_name_corr.style.background_gradient()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"WQVrNVclMjXI"},"source":["### 4. train 데이터 내에서 수입용도에 대한 분석 "]},{"cell_type":"code","metadata":{"id":"BfZcpiC_N83F"},"source":["arr = ['간', '개아지살', '건조', '곤이', '껍질', '꼬리_외화획득용', '난포선', '내장', '냉동', '냉장', '눈살', '다리', '동체',\n"," '머리', '머리_외화획득용', '머리살', '목살','볼살', '살', '슬라이스(S)', '알', '염장', '외투막', '자숙', '절단',\n"," '줄기', '지느러미', '집게다리', '창난', '캐비아대용', '턱살', '포장횟감', '필렛(F)', '한쪽껍질붙은', '활', '횟감','훈제']\n","# df5_import\n","\n","arr_p = ['P_PRICE']\n","for i in arr : \n","     arr_p.append(i)\n","\n","df_test = pd.DataFrame([])\n","\n","\n","df_test = df_train[arr_p]\n","df_test.reset_index(drop=True,inplace=True)\n","df5_import = df_test\n","\n","df5_import_corr = df5_import.corr()\n","\n","plt.figure(figsize = (10,10))\n","\n","# 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","mask = np.zeros_like(df5_import_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","\n","plt.rc('axes', unicode_minus=False)\n","sns.heatmap(df5_import_corr,\n","            cmap = 'coolwarm', \n","            annot = True,   # 실제 값을 표시한다\n","            mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","            #linewidths=.5,  # 경계면 실선으로 구분하기\n","            cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","            vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","           )\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"Ug8LKFQUO1fP"},"source":["df5_import_corr[df5_import_corr['P_PRICE']>=0]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5YUTnQrNPzmu"},"source":["# ['P_PRICE','CATEGORY_1_갑각류', 'CATEGORY_1_패류 멍게류', 'CATEGORY_1_어류', 'CATEGORY_1_연체류 해물모듬', 'CATEGORY_1_젓갈류 해조류 해파리', 'CATEGORY_1_알 곤이류','CATEGORY_1_기타 수입식품']\n","\n","arr = ['아르헨티나붉은새우', '꽃게', '해삼', '서대', '은밀복', '옥돔', '까치복', '흰다리새우', '바지락',\n","       '가리비', '개조개', '문어', '주꾸미', '멍게', '대서양참다랑어', '파타고니아이빨고기', '낙지',\n","       '눈다랑어', '가오리', '미역', '뱀장어', '참다랑어', '대서양연어', '대구', '명태알', '대게',\n","       '줄민태', '홍서대', '위고둥', '꽁치', '황새치', '틸라피아', '오징어', '기름치', '바다가재',\n","       '까지가자미', '홍어', '먹장어', '명태', '홍다리얼룩새우', '화살오징어', '청상아리', '붕어',\n","       '감성돔', '자주복', '꼬막', '재첩', '피조개', '피뿔고둥', '능성어', '준치', '참돔', '연어',\n","       '왕게', '장문볼락', '각시가자미', '가자미', '털게', '해파리', '새우', '민밀복', '젓새우',\n","       '홍합', '백합,MERCENARIA MERCENARIA', '새꼬리민태알', '붕장어', '갈치', '밴댕이',\n","       '갑오징어', '성게알', '동자개', '코토니', '병어', '이스라엘잉어', '영상가이석태', '스피노잠',\n","       '새꼬막', '농어', '아귀', '긴가이석태', '방어', '고등어', '흑밀복', '홍민어', '북방대합',\n","       '백합', '황돔', '미꾸라지', '가무락조개', '부세', '줄비늘치', '개불', '비단조개', '깜장북방대합',\n","       '참조기', '비너스백합', '민들조개', '주름백합', '아담스백합', '은연어', '민어', '옥두어', '민꽃게',\n","       '골뱅이', '민물새우', '게', '임연수어', '해물혼합', '식용자라', '흑기흉상어', 'PANGASIUS메기',\n","       '보리멸', '마소치가자미', '귀상어', '동죽', '남방참다랑어', '송어', '적새우', '잉어', '쥐치',\n","       '다슬기', '소주목탁가자미', '맛조개', '톳', '양볼락', '조피볼락', '동등이석태', '곱사연어',\n","       '대서양먹장어', '대구알', '붉은이석태', '붉평치', '수조기', '강도다리', '날치알', '왕연어', '전복',\n","       '청어', '바닷가재', '쥐노래미', '학공치', '멸치', '키조개', '새조개', '가이석태속', '붉은대게',\n","       '돌돔', '황다랑어', '검정가자미', '은대구', '쏘가리', '붉은메기', '벵에돔', '북쪽분홍새우',\n","       '돛새치', '갯고둥', '돌가자미', '상어', '먹볼락', '마설가자미', '검복', '참게', '톱날꽃게',\n","       '참복', '동갈돗돔', '밤색무늬조개', '가다랑어', '큰징거미새우', '꼬시래기', '진환도상어', '첨치가자미',\n","       '메기', '실꼬리돔', '블루화이팅', '꼬리검정민태', '청새치', '홍연어,Red salmon', '달고기',\n","       '대서양꼬마민어', '어름돔', '개량조개', '전갱이,POMPANO', '자바리', '벤자리', '자이언트그루퍼',\n","       '갯장어', '논고둥', '돌가사리', '열빙어', '도화새우', '가물치', '검정볼락', '청어알',\n","       '두점박이민꽃게', '개복치', '진홍퉁돔', '양태', '황적퉁돔', '가시투성왕게', '청새리상어',\n","       '태평양먹장어', '쿠자조기', '큰구슬우렁이', '큰실말', '강담돔', '칠성장어', '닭새우', '열빙어알',\n","       '쥐돔', '전갱이', '홍감펭', '곱상어', '청각', '날개다랑어', '연어알', '우뭇가사리', '매듭가자미',\n","       '전어', '새뱅이', '유럽물레고둥', '흑점샛돔알', '흑점줄전갱이', '돔', '장수기름가자미', '가라지',\n","       '코드아이스피쉬', '망둑어', '은민대구알', '기타민어류', '남방대구', '삼치', '던지네스게', '샛돔류알',\n","       '체장메기', '버들붕어', '민물가재', '까칠복', '뿔가자미', '왕게붙이', '잿방어', '대서양조기속',\n","       '넙치', '세네갈가이석태', '샛돔', '은행게', '볼락', '병치매가리', '밀크피시', '붉돔', '기타병어류',\n","       '양초선홍치', '민태', '다시마', '회초리꼬리민태', '버터플라이 킹피쉬', '흰꼴뚜기', '대두이석태',\n","       '얼룩볼락', '큰민어', '바라문디', '바리', '민대구', '적돔', '동갈횟대', '드렁허리', '금색돔',\n","       '소라', '김', '녹새치', '금눈돔', '매미새우', '옥덩굴', '은민대구', '장성베도라치', '바리,교잡종',\n","       '코끼리조개', '구라미', '쌍지붕어', '대서양붉은볼락', '청대구', '프로펠러조개', '정어리', '등목어',\n","       '가시배새우', '물메기', '청회볼락']\n","\n","\n","arr_p = ['P_PRICE','CATEGORY_1_갑각류', 'CATEGORY_1_패류 멍게류', 'CATEGORY_1_어류', 'CATEGORY_1_연체류 해물모듬', 'CATEGORY_1_젓갈류 해조류 해파리', 'CATEGORY_1_알 곤이류','CATEGORY_1_기타 수입식품']\n","for i in arr : \n","     arr_p.append(\"P_NAME_\" + i)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"axtwINFPUkz1"},"source":["df_test = pd.DataFrame([])\n","\n","\n","df_test = df_train[arr_p]\n","df_test.reset_index(drop=True,inplace=True)\n","df4_name = df_test\n","\n","df4_name_corr = df4_name.corr()\n","\n","# 너무많아서 안보임\n","\n","# plt.figure(figsize = (10,10))\n","\n","# # 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","# mask = np.zeros_like(df4_name_corr, dtype=np.bool)\n","# mask[np.triu_indices_from(mask)] = True\n","\n","# plt.rc('axes', unicode_minus=False)\n","# sns.heatmap(df4_name_corr,\n","#             cmap = 'coolwarm', \n","#             annot = True,   # 실제 값을 표시한다\n","#             mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","#             #linewidths=.5,  # 경계면 실선으로 구분하기\n","#             cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","#             vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","#            )\n","# plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"DU9yMSyKUpEn"},"source":["df4_name_corr.style.background_gradient()"],"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"W_xySyJtUtzl"},"source":["### 5. 연어, 오징어, 새우 별 날씨, cpi, 오일 등 비교"]},{"cell_type":"code","metadata":{"id":"AC07Gs8sVyg0"},"source":["df_salmon = df_train[df_train['P_NAME_연어']==1]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"jpEhNqwzXrfw"},"source":["# 오징어 '건조', '난포선', '냉동', '다리', '동체', '슬라이스(S)', '자숙', '지느러미', '포장횟감'\n","# 연어 '곤이', '냉동', '냉장', '슬라이스(S)', '포장횟감', '필렛(F)', '횟감'\n","# 새우 '건조', '냉동', '살', '자숙'\n","\n","arr = ['곤이', '냉동', '냉장', '슬라이스(S)', '포장횟감', '필렛(F)', '횟감']\n","# df5_import\n","\n","arr_p = ['P_PRICE']\n","for i in arr : \n","     arr_p.append(i)\n","\n","df_test = pd.DataFrame([])\n","\n","\n","df_test = df_salmon[arr_p]\n","df_test.reset_index(drop=True,inplace=True)\n","df5_import = df_test\n","\n","df5_import_corr = df5_import.corr()\n","\n","plt.figure(figsize = (10,10))\n","\n","# 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","mask = np.zeros_like(df5_import_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","\n","plt.rc('axes', unicode_minus=False)\n","sns.heatmap(df5_import_corr,\n","            cmap = 'coolwarm', \n","            annot = True,   # 실제 값을 표시한다\n","            mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","            #linewidths=.5,  # 경계면 실선으로 구분하기\n","            cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","            vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","           )\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"4jKxF83sY5QD"},"source":["df_squid = df_train[df_train['P_NAME_오징어']==1]\n","\n","# 오징어 '건조', '난포선', '냉동', '다리', '동체', '슬라이스(S)', '자숙', '지느러미', '포장횟감'\n","# 연어 '곤이', '냉동', '냉장', '슬라이스(S)', '포장횟감', '필렛(F)', '횟감'\n","# 새우 '건조', '냉동', '살', '자숙'\n","\n","arr = ['건조', '난포선', '냉동', '다리', '동체', '슬라이스(S)', '자숙', '지느러미', '포장횟감']\n","# df5_import\n","\n","arr_p = ['P_PRICE']\n","for i in arr : \n","     arr_p.append(i)\n","\n","df_test = pd.DataFrame([])\n","\n","\n","df_test = df_squid[arr_p]\n","df_test.reset_index(drop=True,inplace=True)\n","df5_import = df_test\n","\n","df5_import_corr = df5_import.corr()\n","\n","plt.figure(figsize = (10,10))\n","\n","# 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","mask = np.zeros_like(df5_import_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","\n","plt.rc('axes', unicode_minus=False)\n","sns.heatmap(df5_import_corr,\n","            cmap = 'coolwarm', \n","            annot = True,   # 실제 값을 표시한다\n","            mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","            #linewidths=.5,  # 경계면 실선으로 구분하기\n","            cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","            vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","           )\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gkpTO5Ndc3mi"},"source":["df_shrimp = df_train[df_train['P_NAME_흰다리새우']==1]\n","\n","# 오징어 '건조', '난포선', '냉동', '다리', '동체', '슬라이스(S)', '자숙', '지느러미', '포장횟감'\n","# 연어 '곤이', '냉동', '냉장', '슬라이스(S)', '포장횟감', '필렛(F)', '횟감'\n","# 흰다리새우 '냉동', '냉장', '살', '자숙', '포장횟감'\n","\n","arr = ['냉동', '냉장', '살', '자숙', '포장횟감']\n","# df5_import\n","\n","arr_p = ['P_PRICE']\n","for i in arr : \n","     arr_p.append(i)\n","\n","df_test = pd.DataFrame([])\n","\n","\n","df_test = df_shrimip[arr_p]\n","df_test.reset_index(drop=True,inplace=True)\n","df5_import = df_test\n","\n","df5_import_corr = df5_import.corr()\n","\n","plt.figure(figsize = (10,10))\n","\n","# 삼각형 마스크를 만든다(위 쪽 삼각형에 True, 아래 삼각형에 False)\n","mask = np.zeros_like(df5_import_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","\n","plt.rc('axes', unicode_minus=False)\n","sns.heatmap(df5_import_corr,\n","            cmap = 'coolwarm', \n","            annot = True,   # 실제 값을 표시한다\n","            mask=mask,      # 표시하지 않을 마스크 부분을 지정한다\n","            #linewidths=.5,  # 경계면 실선으로 구분하기\n","            cbar_kws={\"shrink\": .5},# 컬러바 크기 절반으로 줄이기\n","            vmin = -1,vmax = 1   # 컬러바 범위 -1 ~ 1\n","           )\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9LMAZd_NdAd-"},"source":["\n","# 연어\n","df_test = pd.DataFrame([])\n","\n","df_1 = df_salmon[['year','week']]\n","df_test[['year','week']]=df_1\n","df_test[['P_PRICE','rain','wind','temperature','oil','wind_kr','temperature_kr','water_temp_kr','cpi_total','cpi_fish',\n","         'exchange']]=df_salmon.groupby(['year','week'])[['P_PRICE','rain','wind','temperature','oil','wind_kr','temperature_kr','water_temp_kr','cpi_total','cpi_fish','exchange']].transform('mean')\n","df_test.drop_duplicates(['year','week'],inplace=True)\n","df_test.reset_index(drop=True,inplace=True)\n","df_salmon_corr = df_test.corr()\n","\n","# 오징어\n","df_test = pd.DataFrame([])\n","\n","df_1 = df_squid[['year','week']]\n","df_test[['year','week']]=df_1\n","df_test[['P_PRICE','rain','wind','temperature','oil','wind_kr','temperature_kr','water_temp_kr','cpi_total','cpi_fish',\n","         'exchange']]=df_squid.groupby(['year','week'])[['P_PRICE','rain','wind','temperature','oil','wind_kr','temperature_kr','water_temp_kr','cpi_total','cpi_fish','exchange']].transform('mean')\n","df_test.drop_duplicates(['year','week'],inplace=True)\n","df_test.reset_index(drop=True,inplace=True)\n","df_squid_corr = df_test.corr()\n","\n","# 흰다리새우\n","df_test = pd.DataFrame([])\n","\n","df_1 = df_shrimp[['year','week']]\n","df_test[['year','week']]=df_1\n","df_test[['P_PRICE','rain','wind','temperature','oil','wind_kr','temperature_kr','water_temp_kr','cpi_total','cpi_fish',\n","         'exchange']]=df_shrimp.groupby(['year','week'])[['P_PRICE','rain','wind','temperature','oil','wind_kr','temperature_kr','water_temp_kr','cpi_total','cpi_fish','exchange']].transform('mean')\n","df_test.drop_duplicates(['year','week'],inplace=True)\n","df_test.reset_index(drop=True,inplace=True)\n","df_shrimp_corr = df_test.corr()\n","\n","fig, ax = plt.subplots(nrows=1,ncols=3,figsize=(24,8))\n","ax[0].set_title(\"연어\")\n","ax[1].set_title(\"오징어\")\n","ax[2].set_title(\"흰다리새우\")\n","\n","plt.rc('axes', unicode_minus=False)\n","\n","mask = np.zeros_like(df_salmon_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","sns.heatmap(df_salmon_corr, cmap = 'coolwarm', annot = True, mask=mask, cbar_kws={\"shrink\": .5}, vmin = -1,vmax = 1,ax=ax[0])\n","\n","mask = np.zeros_like(df_squid_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","sns.heatmap(df_squid_corr, cmap = 'coolwarm', annot = True, mask=mask, cbar_kws={\"shrink\": .5}, vmin = -1,vmax = 1,ax=ax[1])\n","\n","mask = np.zeros_like(df_shrimp_corr, dtype=np.bool)\n","mask[np.triu_indices_from(mask)] = True\n","sns.heatmap(df_shrimp_corr, cmap = 'coolwarm', annot = True, mask=mask, cbar_kws={\"shrink\": .5}, vmin = -1,vmax = 1,ax=ax[2])\n","plt.show()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"x6Xwyhs7jd2Y"},"source":[""],"execution_count":null,"outputs":[]}]}